# We do not include mypy as a pre-commit hook because pre-commit hooks
# are installed in their own virtual environment, so mypy cannot
# use stubs from imports
name: mypy

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  mypy:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    concurrency:
      group: "${{ github.workflow }} @ ${{ github.ref }}"
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2

      - name: Cache venv
        uses: actions/cache@v3.2.6
        id: cache_venv
        with:
          path: |
            .venv
          key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Set up Python
        uses: actions/setup-python@v4
        id: setup_python
        if: steps.cache_venv.outputs.cache-hit != 'true'
        with:
          python-version: "3.9"

      - name: Install dependencies
        shell: bash
        if: steps.cache_venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run static type checker
        id: pyright
        continue-on-error: true
        run: |
          source .venv/bin/activate
          if pyright .; then
            echo "pyright check passed"
            echo "pyright_failed=0" >> $GITHUB_OUTPUT
          else
            echo "pyright check failed"
            echo "pyright_failed=1" >> $GITHUB_OUTPUT
          fi

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find_comment
        if: ${{github.event_name == 'pull_request'}}
        continue-on-error: true
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: âœ¨ Looks like pyright failed âœ¨

      - uses: mshick/add-pr-comment@v2
        if: ${{ steps.pyright.outputs.pyright_failed == 1 && github.event_name == 'pull_request'}}
        id: add_comment
        with:
          message: |
            âœ¨ Looks like pyright failed âœ¨

            If you want to fix this, we recommend doing it locally by either:
              a) Enabling pyright in VSCode and going through the errors in the problems tab (VSCode settings > Python > Analysis: Type checking mode > "basic")
              b) Debugging via the command line
                1. Installing pyright, which is included in the dev dependencies: `pip install -e ".[dev]"`
                2. Diagnosing the errors by running `pyright .`

      - uses: mshick/add-pr-comment@v2
        if: ${{ steps.pyright.outputs.pyright_failed == 0 && steps.find_comment.outputs.comment-id != '' && github.event_name == 'pull_request'}}
        with:
          message-id: ${{ steps.find_comment.outputs.comment-id }}
          message: |
            ðŸŒŸ pyright succeeds! ðŸŒŸ

      - name: Show pyright output
        id: fail_run
        if: ${{steps.pyright.outputs.pyright_failed == 1}}
        run: |
          pyright . # Rerunning pyright isn't optimal computationally, but typically takes no more than a couple of seconds, and this ensures that the errors are in the failing step

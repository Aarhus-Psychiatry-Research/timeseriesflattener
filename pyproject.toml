[project]
name = "timeseriesflattener"
version = "0.23.11"
description = "A package for converting time series data from e.g. electronic health records into wide format data."
readme = "README.md"
authors = [{name = "Lasse Hansen", email = "lasseh0310@gmail.com"}, {name = "Jakob GrÃ¸hn Damgaard", email = "bokajgd@gmail.com"}, {name = "Kenneth Enevoldsen"}, {name = "Martin Bernstorff", email = "martinbernstorff@gmail.com"}]
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

requires-python = ">=3.8.0,<3.12.0"

dependencies = [
    "scipy>=1.8.0,<1.9.4",
    "scikit-learn>=1.1.2,<1.2.3",
    "pydantic>=1.9.0, <1.11.0",
    "pandas>=1.4.0,<1.6.0",
    "catalogue>=2.0.0, <2.1.0",
    "numpy>=1.23.3,<1.24.2",
    "pyarrow>=9.0.0,<11.1.0",
    "protobuf<=3.20.3", # Other versions give errors with pytest, super weird!
    "frozendict>=2.3.4,<2.4.0",
    "coloredlogs>14.0.0,<15.1.0",
    "psycopmlutils>=0.5.0, <0.12.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.8.0,<23.1.1",
    "pre-commit>=2.20.0,<3.2.2",
    "mypy>=0.971,<1.2",
    "pytest>=7.1.3, <7.2.3",
    "pytest-cov>=3.0.0,<4.0.1",
    "pytest-xdist>=2.4.0,<3.2.2",
]

docs = [
    "sphinx>=5.3.0,<6.2.0",
    "furo==2023.3.23",
    "sphinx-copybutton>=0.5.1,<0.5.2",
    "sphinxext-opengraph>=0.7.3,<0.8.2",
    "myst-nb>=0.6.0,<1.17.0",
    "sphinx_design>=0.3.0,<0.3.1",
    "autodoc_pydantic>=1.1.0,<1.9.0",
]

tutorials = [
    "jupyter>=1.0.0,<1.1.0",
    "skimpy>=0.0.7,<0.1.0",
]

text = [
    "transformers>=4.26.0,<4.28.0",
    "torch>=1.12.0,<2.1.0",
    "sentence-transformers>=1.0.0,<2.5.0",
]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
warn_unused_ignores = true
warn_unreachable = true
plugins = "pydantic.mypy"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "C4",
  "COM",
  "D417",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "Q",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W"
]
ignore = [
  "ANN101",
  "ANN401",
  "E402",
  "E501",
  "F401",
  "F841",
  "RET504"
]
ignore-init-module-imports = true
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__init__.py"
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py38"

[tool.ruff.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.isort]
known-third-party = ["wandb"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.semantic_release]
branch = "main"
version_variable = [
    "pyproject.toml:version"
]
upload_to_pypi = true
upload_to_release = true
build_command = "python -m pip install build; python -m build"

[tool.pytest]
n = 0

[tool.pyright]

[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "timeseriesflattener"
version = "1.7.0"
authors = [
  { name = "Lasse Hansen", email = "lasseh0310@gmail.com" },
  { name = "Jakob GrÃ¸hn Damgaard", email = "bokajgd@gmail.com" },
  { name = "Kenneth Enevoldsen" },
  { name = "Martin Bernstorff", email = "martinbernstorff@gmail.com" },
]
description = "A package for converting time series data from e.g. electronic health records into wide format data."
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8.0,<3.12.0"
dependencies = [
  "scipy>=1.8.0",
  "scikit-learn>=1.1.2",
  "pydantic>=1.9.0",
  "pandas>=1.4.0, <2.0.0",
  "catalogue>=2.0.0",
  "numpy>=1.23.3",
  "pyarrow>=8.0.0",
  "protobuf<=4.24.4",      # Other versions give errors with pytest, super weird!
  "frozendict>=2.3.4",
  "coloredlogs>14.0.0",
  "tqdm>4.1.0",
]

[project.license]
file = "LICENSE"
name = "MIT"
[project.optional-dependencies]
dev = [
  "cruft",
  "pyright==1.1.330.post0",
  "pre-commit==3.4.0",
  "ruff==0.0.292",          # important that these match the pre-commit hooks
  "black[jupyter]==23.9.1", # important that these match the pre-commit hooks
  "pandas-stubs",           # type stubs for pandas
  "invoke==2.1.1",
  "tox",
]
test = [
  "pytest>=7.1.3,<7.3.0",
  "pytest-cov>=3.0.0,<3.1.0",
  "pytest-xdist>=3.0.0,<3.2.0",
  "pytest-sugar>=0.9.4,<0.10.0",
]
docs = [
  "sphinx==5.3.0",
   "furo==2023.3.27",
   "sphinx-copybutton==0.5.2",
   "sphinxext-opengraph==0.8.2",
   "myst-nb==0.17.2",
   "sphinx_design==0.3.0",
]
tutorials = ["jupyter>=1.0.0,<1.1.0", "skimpy>=0.0.7,<0.1.0"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
homepage = "https://github.com/Aarhus-Psychiatry-Research/timeseriesflattener"
repository = "https://github.com/Aarhus-Psychiatry-Research/timeseriesflattener"
documentation = "https://aarhus-psychiatry-research.github.io/timeseriesflattener/"

[tool.pyright]
exclude = [".*venv*/", ".venv38/", ".tox"]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "C4",
  "COM",
  "D417",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "Q",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W",
]
ignore = ["ANN101", "ANN401", "E402", "E501", "F401", "F841", "RET504"]
ignore-init-module-imports = true
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__init__.py",
  "docs/conf.py",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py38"

[tool.ruff.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.isort]
known-third-party = ["wandb"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.semantic_release]
branch = "main"
version_variable = ["pyproject.toml:version"]
upload_to_pypi = true
upload_to_release = true
build_command = "python -m pip install build; python -m build"

[tool.setuptools]
include-package-data = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39

[testenv]
description: run unit tests
extras = test
use_develop = true
commands =
  pytest -n auto {posargs:tests}

[testenv:type]
description: run static type checking
extras = test, dev
basepython = py39
use_develop = true
allowlist_externals = ls
commands =
  pyright .
"""
